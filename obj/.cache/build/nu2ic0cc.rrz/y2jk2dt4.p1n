<!DOCTYPE html>
<!--[if IE]><![endif]-->
<html>
  
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <title>Install OSIsoft Adapter for Modbus TCP using Docker </title>
    <meta name="viewport" content="width=device-width">
    <meta name="title" content="Install OSIsoft Adapter for Modbus TCP using Docker ">
    <meta name="generator" content="docfx 2.54.0.0">
    
    <link rel="shortcut icon" href="../../favicon.ico">
    <link rel="stylesheet" href="../../styles/docfx.vendor.css">
    <link rel="stylesheet" href="../../styles/docfx.css">
    <link rel="stylesheet" href="../../styles/main.css">
    <meta property="docfx:navrel" content="../../toc.html">
    <meta property="docfx:tocrel" content="../toc.html">
    
    <meta property="docfx:rel" content="../../">
    
  </head>
  <body data-spy="scroll" data-target="#affix" data-offset="120">
    <div id="wrapper">
      <header>
        
        <nav id="autocollapse" class="navbar navbar-inverse ng-scope" role="navigation">
          <div class="container">
            <div class="navbar-header">
              <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#navbar">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
              </button>
              <a class="navbar-brand" href="../../V1/index.html" width="46">
                <img id="logo" src="../../V1/main/V1/images/atlas_icon.png" height="46" width="46" alt="OSIsoft Edge System"> 
              </a>
            </div>
            <div class="collapse navbar-collapse" id="navbar">
              <form class="navbar-form navbar-right" role="search" id="search">
                <div class="form-group">
                  <input type="text" class="form-control" id="search-query" placeholder="Search" autocomplete="off">
                </div>
              </form>
            </div>
          </div>
        </nav>
        
        <div class="subnav navbar navbar-default">
          <div class="container hide-when-search" id="breadcrumb">
            <ul class="breadcrumb">
              <li></li>
            </ul>
          </div>
        </div>
      </header>
      <div class="container body-content">
        
        <div id="search-results">
          <div class="search-list"></div>
          <div class="sr-items">
            <p><i class="glyphicon glyphicon-refresh index-loading"></i></p>
          </div>
          <ul id="pagination"></ul>
        </div>
      </div>
      <div role="main" class="container body-content hide-when-search">
        
        <div class="sidenav hide-when-search">
          <a class="btn toc-toggle collapse" data-toggle="collapse" href="#sidetoggle" aria-expanded="false" aria-controls="sidetoggle">Show / Hide Table of Contents</a>
          <div class="sidetoggle collapse" id="sidetoggle">
            <div id="sidetoc"></div>
          </div>
        </div>
        <div class="article row grid-right">
          <div class="col-md-10">
            <article class="content wrap" id="_content" data-uid="InstallOSIsoftAdapterForModbusTCPUsingDocker">
<h1 id="install-osisoft-adapter-for-modbus-tcp-using-docker" sourcefile="V1/Installation/Install OSIsoft Adapter for Modbus TCP using Docker.md" sourcestartlinenumber="5" sourceendlinenumber="5">Install OSIsoft Adapter for Modbus TCP using Docker</h1>

<p sourcefile="V1/Installation/Install OSIsoft Adapter for Modbus TCP using Docker.md" sourcestartlinenumber="7" sourceendlinenumber="7">Docker is a set of tools that you can use on Linux to manage application deployments.</p>
<p sourcefile="V1/Installation/Install OSIsoft Adapter for Modbus TCP using Docker.md" sourcestartlinenumber="9" sourceendlinenumber="9"><strong>Note:</strong> If you want to use Docker, you must be familiar with the underlying technology and have determined that it is appropriate for your planned use of the Modbus TCP adapter. Docker is not required to use  the Modbus TCP adapter.</p>
<p sourcefile="V1/Installation/Install OSIsoft Adapter for Modbus TCP using Docker.md" sourcestartlinenumber="11" sourceendlinenumber="11">This topic provides examples of how to create a Docker container with the Modbus TCP adapter.</p>
<h2 id="create-a-startup-script-for-the-adapter" sourcefile="V1/Installation/Install OSIsoft Adapter for Modbus TCP using Docker.md" sourcestartlinenumber="13" sourceendlinenumber="13">Create a startup script for the adapter</h2>
<ol sourcefile="V1/Installation/Install OSIsoft Adapter for Modbus TCP using Docker.md" sourcestartlinenumber="15" sourceendlinenumber="131">
<li sourcefile="V1/Installation/Install OSIsoft Adapter for Modbus TCP using Docker.md" sourcestartlinenumber="15" sourceendlinenumber="129"><p sourcefile="V1/Installation/Install OSIsoft Adapter for Modbus TCP using Docker.md" sourcestartlinenumber="15" sourceendlinenumber="15">Using any text editor, create a script similar to one of the following:</p>
<p sourcefile="V1/Installation/Install OSIsoft Adapter for Modbus TCP using Docker.md" sourcestartlinenumber="17" sourceendlinenumber="17"> <strong>Note:</strong> The script varies slightly by processor.</p>
<p sourcefile="V1/Installation/Install OSIsoft Adapter for Modbus TCP using Docker.md" sourcestartlinenumber="19" sourceendlinenumber="19"> <strong>ARM32</strong></p>
<pre sourcefile="V1/Installation/Install OSIsoft Adapter for Modbus TCP using Docker.md" sourcestartlinenumber="21" sourceendlinenumber="54"><code class="lang-bash">#!/bin/sh
#local variables
defaultPort=5590
#regexp to only accept numerals
re=&#39;^[0-9]+$&#39;

portConfigFile=&quot;/Modbus_linux-arm/appsettings.json&quot;

#validate the port number input
if [ -z $portnum ] ; then
        portnum=${defaultPort}
        echo &quot;Default value selected.&quot; ;
else
        echo $portnum | grep -q -E $re
        isNum=$?
        if [ $isNum -ne 0 ] || [ $portnum -le 1023 ] || [ $portnum -gt 49151 ] ; then
                echo &quot;Invalid input. Setting default value ${defaultPort} instead...&quot;
                portnum=${defaultPort};
        fi
fi

echo &quot;configuring port ${portnum}&quot;
#write out the port config file
cat &gt; ${portConfigFile} &lt;&lt; EOF
{
&quot;ApplicationSettings&quot;: {
        &quot;Port&quot;: ${portnum},
        &quot;ApplicationDataDirectory&quot;: &quot;/usr/share/OSIsoft/Adapters/Modbus&quot;
        }
}
EOF
exec /Modbus_linux-arm/OSIsoft.Data.System.Host
</code></pre><p sourcefile="V1/Installation/Install OSIsoft Adapter for Modbus TCP using Docker.md" sourcestartlinenumber="56" sourceendlinenumber="56"> <strong>ARM64</strong></p>
<pre sourcefile="V1/Installation/Install OSIsoft Adapter for Modbus TCP using Docker.md" sourcestartlinenumber="58" sourceendlinenumber="92"><code class="lang-bash">
#!/bin/sh
#local variables
defaultPort=5590
#regexp to only accept numerals
re=&#39;^[0-9]+$&#39;

portConfigFile=&quot;/Modbus_linux-arm64/appsettings.json&quot;

#validate the port number input
if [ -z $portnum ] ; then
        portnum=${defaultPort}
        echo &quot;Default value selected.&quot; ;
else
        echo $portnum | grep -q -E $re
        isNum=$?
        if [ $isNum -ne 0 ] || [ $portnum -le 1023 ] || [ $portnum -gt 49151 ] ; then
                echo &quot;Invalid input. Setting default value ${defaultPort} instead...&quot;
                portnum=${defaultPort};
        fi
fi

echo &quot;configuring port ${portnum}&quot;
#write out the port config file
cat &gt; ${portConfigFile} &lt;&lt; EOF
{
&quot;ApplicationSettings&quot;: {
        &quot;Port&quot;: ${portnum},
        &quot;ApplicationDataDirectory&quot;: &quot;/usr/share/OSIsoft/Adapters/Modbus&quot;
        }
}
EOF
exec /Modbus_linux-arm64/OSIsoft.Data.System.Host
</code></pre><p sourcefile="V1/Installation/Install OSIsoft Adapter for Modbus TCP using Docker.md" sourcestartlinenumber="94" sourceendlinenumber="94"> <strong>AMD64</strong></p>
<pre sourcefile="V1/Installation/Install OSIsoft Adapter for Modbus TCP using Docker.md" sourcestartlinenumber="96" sourceendlinenumber="129"><code class="lang-bash">#!/bin/sh
#local variables
defaultPort=5590
#regexp to only accept numerals
re=&#39;^[0-9]+$&#39;

portConfigFile=&quot;/Modbus_linux-x64/appsettings.json&quot;

#validate the port number input
if [ -z $portnum ] ; then
        portnum=${defaultPort}
        echo &quot;Default value selected.&quot; ;
else
        echo $portnum | grep -q -E $re
        isNum=$?
        if [ $isNum -ne 0 ] || [ $portnum -le 1023 ] || [ $portnum -gt 49151 ] ; then
                echo &quot;Invalid input. Setting default value ${defaultPort} instead...&quot;
                portnum=${defaultPort};
        fi
fi

echo &quot;configuring port ${portnum}&quot;
#write out the port config file
cat &gt; ${portConfigFile} &lt;&lt; EOF
{
&quot;ApplicationSettings&quot;: {
        &quot;Port&quot;: ${portnum},
        &quot;ApplicationDataDirectory&quot;: &quot;/usr/share/OSIsoft/Adapters/Modbus&quot;
        }
}
EOF
exec /Modbus_linux-x64/OSIsoft.Data.System.Host
</code></pre></li>
<li sourcefile="V1/Installation/Install OSIsoft Adapter for Modbus TCP using Docker.md" sourcestartlinenumber="131" sourceendlinenumber="131"><p sourcefile="V1/Installation/Install OSIsoft Adapter for Modbus TCP using Docker.md" sourcestartlinenumber="131" sourceendlinenumber="131">Name the script <code>modbusdockerstart.sh</code> and save it to the directory where you plan to create the container.</p>
</li>
</ol>
<h2 id="create-a-docker-container-containing-the-modbus-tcp-adapter" sourcefile="V1/Installation/Install OSIsoft Adapter for Modbus TCP using Docker.md" sourcestartlinenumber="133" sourceendlinenumber="133">Create a Docker container containing the Modbus TCP adapter</h2>
<ol sourcefile="V1/Installation/Install OSIsoft Adapter for Modbus TCP using Docker.md" sourcestartlinenumber="135" sourceendlinenumber="182">
<li sourcefile="V1/Installation/Install OSIsoft Adapter for Modbus TCP using Docker.md" sourcestartlinenumber="135" sourceendlinenumber="172"><p sourcefile="V1/Installation/Install OSIsoft Adapter for Modbus TCP using Docker.md" sourcestartlinenumber="135" sourceendlinenumber="135">Create the following <code>Dockerfile</code> in the directory where you want to create and run the container.</p>
<p sourcefile="V1/Installation/Install OSIsoft Adapter for Modbus TCP using Docker.md" sourcestartlinenumber="137" sourceendlinenumber="137"> <strong>Note:</strong> <code>Dockerfile</code> is the required name for the file. Use the variation according to your operating system:</p>
<h3 id="arm32" sourcefile="V1/Installation/Install OSIsoft Adapter for Modbus TCP using Docker.md" sourcestartlinenumber="139" sourceendlinenumber="139">ARM32</h3>
<pre sourcefile="V1/Installation/Install OSIsoft Adapter for Modbus TCP using Docker.md" sourcestartlinenumber="141" sourceendlinenumber="149"><code class="lang-bash">FROM ubuntu
WORKDIR /
RUN apt-get update &amp;&amp; DEBIAN_FRONTEND=noninteractive apt-get install -y ca-certificates libicu66 libssl1.1 curl
COPY modbusdockerstart.sh /
RUN chmod +x /modbusdockerstart.sh
ADD ./Modbus_linux-arm.tar.gz .
ENTRYPOINT [&quot;/modbusdockerstart.sh&quot;]
</code></pre><h3 id="arm64" sourcefile="V1/Installation/Install OSIsoft Adapter for Modbus TCP using Docker.md" sourcestartlinenumber="150" sourceendlinenumber="150">ARM64</h3>
<pre sourcefile="V1/Installation/Install OSIsoft Adapter for Modbus TCP using Docker.md" sourcestartlinenumber="152" sourceendlinenumber="160"><code class="lang-bash">FROM ubuntu
WORKDIR /
RUN apt-get update &amp;&amp; DEBIAN_FRONTEND=noninteractive apt-get install -y ca-certificates libicu66 libssl1.1 curl 
COPY modbusdockerstart.sh /
RUN chmod +x /modbusdockerstart.sh
ADD ./Modbus_linux-arm64.tar.gz .
ENTRYPOINT [&quot;/modbusdockerstart.sh&quot;]
</code></pre><h3 id="amd64-x64" sourcefile="V1/Installation/Install OSIsoft Adapter for Modbus TCP using Docker.md" sourcestartlinenumber="162" sourceendlinenumber="162">AMD64 (x64)</h3>
<pre sourcefile="V1/Installation/Install OSIsoft Adapter for Modbus TCP using Docker.md" sourcestartlinenumber="164" sourceendlinenumber="172"><code class="lang-bash">FROM ubuntu
WORKDIR /
RUN apt-get update &amp;&amp; DEBIAN_FRONTEND=noninteractive apt-get install -y ca-certificates libicu66 libssl1.1 curl 
COPY modbusdockerstart.sh /
RUN chmod +x /modbusdockerstart.sh
ADD ./Modbus_linux-x64.tar.gz .
ENTRYPOINT [&quot;/modbusdockerstart.sh&quot;]
</code></pre></li>
<li sourcefile="V1/Installation/Install OSIsoft Adapter for Modbus TCP using Docker.md" sourcestartlinenumber="174" sourceendlinenumber="174"><p sourcefile="V1/Installation/Install OSIsoft Adapter for Modbus TCP using Docker.md" sourcestartlinenumber="174" sourceendlinenumber="174">Copy the <code>Modbus_linux-\&lt;platform&gt;.tar.gz</code> file to the same directory as the <code>Dockerfile</code>.</p>
</li>
<li sourcefile="V1/Installation/Install OSIsoft Adapter for Modbus TCP using Docker.md" sourcestartlinenumber="176" sourceendlinenumber="176"><p sourcefile="V1/Installation/Install OSIsoft Adapter for Modbus TCP using Docker.md" sourcestartlinenumber="176" sourceendlinenumber="176">Copy the <code>modbusdockerstart.sh</code> script to the same directory as the <code>Dockerfile</code>.</p>
</li>
<li sourcefile="V1/Installation/Install OSIsoft Adapter for Modbus TCP using Docker.md" sourcestartlinenumber="178" sourceendlinenumber="182"><p sourcefile="V1/Installation/Install OSIsoft Adapter for Modbus TCP using Docker.md" sourcestartlinenumber="178" sourceendlinenumber="178">Run the following command line in the same directory (<code>sudo</code> may be necessary):</p>
<pre sourcefile="V1/Installation/Install OSIsoft Adapter for Modbus TCP using Docker.md" sourcestartlinenumber="180" sourceendlinenumber="182"><code class="lang-bash">docker build -t modbusadapter .
</code></pre></li>
</ol>
<h2 id="run-the-modbus-tcp-adapter-docker-container" sourcefile="V1/Installation/Install OSIsoft Adapter for Modbus TCP using Docker.md" sourcestartlinenumber="184" sourceendlinenumber="184">Run the Modbus TCP adapter Docker container</h2>
<h3 id="rest-access-from-the-local-host-to-the-docker-container" sourcefile="V1/Installation/Install OSIsoft Adapter for Modbus TCP using Docker.md" sourcestartlinenumber="186" sourceendlinenumber="186">REST access from the local host to the Docker container</h3>
<p sourcefile="V1/Installation/Install OSIsoft Adapter for Modbus TCP using Docker.md" sourcestartlinenumber="188" sourceendlinenumber="188">Complete the following to run the container:</p>
<ol sourcefile="V1/Installation/Install OSIsoft Adapter for Modbus TCP using Docker.md" sourcestartlinenumber="190" sourceendlinenumber="195">
<li sourcefile="V1/Installation/Install OSIsoft Adapter for Modbus TCP using Docker.md" sourcestartlinenumber="190" sourceendlinenumber="190">Use the docker container image <code>modbusadapter</code> previously created.</li>
<li sourcefile="V1/Installation/Install OSIsoft Adapter for Modbus TCP using Docker.md" sourcestartlinenumber="191" sourceendlinenumber="195"><p sourcefile="V1/Installation/Install OSIsoft Adapter for Modbus TCP using Docker.md" sourcestartlinenumber="191" sourceendlinenumber="191">Type the following in the command line (<code>sudo</code> may be necessary):</p>
<pre sourcefile="V1/Installation/Install OSIsoft Adapter for Modbus TCP using Docker.md" sourcestartlinenumber="193" sourceendlinenumber="195"><code class="lang-bash">docker run -d --network host modbusadapter
</code></pre></li>
</ol>
<p sourcefile="V1/Installation/Install OSIsoft Adapter for Modbus TCP using Docker.md" sourcestartlinenumber="197" sourceendlinenumber="197">Port <code>5590</code> is accessible from the host and you can make REST calls to Modbus TCP adapter from applications on the local host computer. In this example, all data stored by the Modbus TCP adapter is stored in the container itself. When you delete the container, the stored data is also deleted.</p>
<h3 id="provide-persistent-storage-for-the-docker-container" sourcefile="V1/Installation/Install OSIsoft Adapter for Modbus TCP using Docker.md" sourcestartlinenumber="199" sourceendlinenumber="199">Provide persistent storage for the Docker container</h3>
<p sourcefile="V1/Installation/Install OSIsoft Adapter for Modbus TCP using Docker.md" sourcestartlinenumber="201" sourceendlinenumber="201">Complete the following to run the container:</p>
<ol sourcefile="V1/Installation/Install OSIsoft Adapter for Modbus TCP using Docker.md" sourcestartlinenumber="203" sourceendlinenumber="208">
<li sourcefile="V1/Installation/Install OSIsoft Adapter for Modbus TCP using Docker.md" sourcestartlinenumber="203" sourceendlinenumber="203">Use the docker container image <code>modbusadapter</code> previously created.</li>
<li sourcefile="V1/Installation/Install OSIsoft Adapter for Modbus TCP using Docker.md" sourcestartlinenumber="204" sourceendlinenumber="208"><p sourcefile="V1/Installation/Install OSIsoft Adapter for Modbus TCP using Docker.md" sourcestartlinenumber="204" sourceendlinenumber="204">Type the following in the command line (<code>sudo</code> may be necessary):</p>
<pre sourcefile="V1/Installation/Install OSIsoft Adapter for Modbus TCP using Docker.md" sourcestartlinenumber="206" sourceendlinenumber="208"><code class="lang-bash">docker run -d --network host -v /modbus:/usr/share/OSIsoft/ modbusadapter
</code></pre></li>
</ol>
<p sourcefile="V1/Installation/Install OSIsoft Adapter for Modbus TCP using Docker.md" sourcestartlinenumber="210" sourceendlinenumber="210">Port <code>5590</code> is accessible from the host and you can make REST calls to Modbus TCP adapter from applications on the local host computer. In this example, all data that is written to the container is instead written to the host directory and the host directory is a directory on the local machine, <code>/modbus</code>. You can specify any directory.</p>
<h3 id="port-number-change" sourcefile="V1/Installation/Install OSIsoft Adapter for Modbus TCP using Docker.md" sourcestartlinenumber="212" sourceendlinenumber="212">Port number change</h3>
<p sourcefile="V1/Installation/Install OSIsoft Adapter for Modbus TCP using Docker.md" sourcestartlinenumber="214" sourceendlinenumber="214">To use a different port other than <code>5590</code>, you can specify a <code>portnum</code> variable on the <code>docker run</code> command line. For example, to start the adapter using port <code>6000</code> instead of <code>5590</code>, you use the following command:</p>
<pre sourcefile="V1/Installation/Install OSIsoft Adapter for Modbus TCP using Docker.md" sourcestartlinenumber="216" sourceendlinenumber="218"><code class="lang-bash">docker run -d -e portnum=6000 --network host modbusadapter
</code></pre><p sourcefile="V1/Installation/Install OSIsoft Adapter for Modbus TCP using Docker.md" sourcestartlinenumber="220" sourceendlinenumber="220">This command accesses the REST API with port <code>6000</code> instead of port <code>5590</code>. The following <code>curl</code> command returns the configuration for the container.</p>
<pre sourcefile="V1/Installation/Install OSIsoft Adapter for Modbus TCP using Docker.md" sourcestartlinenumber="222" sourceendlinenumber="224"><code class="lang-bash">curl http://localhost:6000/api/v1/configuration
</code></pre><h3 id="remove-rest-access-to-the-docker-container" sourcefile="V1/Installation/Install OSIsoft Adapter for Modbus TCP using Docker.md" sourcestartlinenumber="226" sourceendlinenumber="226">Remove REST access to the Docker container</h3>
<p sourcefile="V1/Installation/Install OSIsoft Adapter for Modbus TCP using Docker.md" sourcestartlinenumber="228" sourceendlinenumber="228">If you remove the <code>--network host</code> option from the docker run command, REST access is not possible from outside of the container. This may be valuable when you want to host an application in the same container as the Modbus TCP adapter, but you do not want external REST access enabled.</p>
</article>
          </div>
          
          <div class="hidden-sm col-md-2" role="complementary">
            <div class="sideaffix">
              <div class="contribution">
                <ul class="nav">
                  <li>
                    <a href="https://github.com/osisoft/OSIsoft-Adapter-Modbus-Docs/blob/master/V1/Installation/Install OSIsoft Adapter for Modbus TCP using Docker.md/#L1" class="contribution-link">Improve this Doc</a>
                  </li>
                </ul>
              </div>
              <nav class="bs-docs-sidebar hidden-print hidden-xs hidden-sm affix" id="affix">
              <!-- <p><a class="back-to-top" href="#top">Back to top</a><p> -->
              </nav>
            </div>
          </div>
        </div>
      </div>
      
      <footer>
        <div class="grad-bottom"></div>
        <div class="footer">
          <div class="container">
            <span class="pull-right">
              <a href="#top">Back to top</a>
            </span>
            
            <span>© 2020 - OSIsoft, LLC.</span>
          </div>
        </div>
      </footer>
    </div>
    
    <script type="text/javascript" src="../../styles/docfx.vendor.js"></script>
    <script type="text/javascript" src="../../styles/docfx.js"></script>
    <script type="text/javascript" src="../../styles/main.js"></script>
  </body>
</html>
